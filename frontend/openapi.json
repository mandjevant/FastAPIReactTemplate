{"openapi":"3.1.0","info":{"title":"FastAPI React Template","version":"0.1.0"},"paths":{"/api/v1/login/access-token":{"post":{"tags":["login"],"summary":"Login Access Token","description":"OAuth2 compatible token login, get an access token for future requests.\n\nParameters\n----------\ndb : Session\n    Database session.\nform_data : OAuth2PasswordRequestForm\n    The login form data.\n\nReturns\n-------\nToken\n    The access token.\n\nRaises\n------\nHTTPException\n    If credentials are invalid or user is inactive.","operationId":"login-login_access_token","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login-login_access_token"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/login/test-token":{"post":{"tags":["login"],"summary":"Test Token","description":"Test access token.\n\nParameters\n----------\ncurrent_user : User\n    The current authenticated user.\n\nReturns\n-------\nUserPublic\n    The user's public info if token is valid.","operationId":"login-test_token","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/users/me":{"get":{"tags":["users"],"summary":"Read User Me","description":"Get the current authenticated user's public info.\n\nParameters\n----------\ncurrent_user : User\n    The current authenticated user.\n\nReturns\n-------\nUserPublic\n    The user's public info.","operationId":"users-read_user_me","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"}},"security":[{"OAuth2PasswordBearer":[]}]},"delete":{"tags":["users"],"summary":"Delete User Me","description":"Delete the current authenticated user.\n\nParameters\n----------\ndb : Session\n    Database session.\ncurrent_user : User\n    The current authenticated user.\n\nReturns\n-------\nMessage\n    Success or failure message.","operationId":"users-delete_user_me","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"}},"security":[{"OAuth2PasswordBearer":[]}]},"patch":{"tags":["users"],"summary":"Update User Me","description":"Update the current authenticated user's info.\n\nParameters\n----------\ndb : Session\n    Database session.\nuser_update : UserUpdate\n    Update data for the user.\ncurrent_user : User\n    The current authenticated user.\n\nReturns\n-------\nUserPublic\n    The updated user's public info.","operationId":"users-update_user_me","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/users/me/password":{"post":{"tags":["users"],"summary":"Update Password","operationId":"users-update_password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdatePassword"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/users/{user_id}":{"get":{"tags":["users"],"summary":"Read User","operationId":"users-read_user","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["users"],"summary":"Update User","description":"Update a user by ID (admin/superuser only).\n\nParameters\n----------\ndb : Session\n    Database session.\nuser_id : uuid.UUID\n    The user's unique ID.\nuser_in : UserUpdate\n    Update data for the user.\ncurrent_superuser : User\n    The current authenticated superuser.\n\nReturns\n-------\nUserPublic\n    The updated user's public info.\n\nRaises\n------\nHTTPException\n    If the user does not exist or email is already taken.","operationId":"users-update_user","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users"],"summary":"Delete User","description":"Delete a user by ID (admin/superuser only).\n\nParameters\n----------\ndb : Session\n    Database session.\nuser_id : uuid.UUID\n    The user's unique ID.\ncurrent_user : User\n    The current authenticated user.\n\nReturns\n-------\nMessage\n    Success or failure message.\n\nRaises\n------\nHTTPException\n    If the user does not exist or tries to delete themselves.","operationId":"users-delete_user","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/users/":{"get":{"tags":["users"],"summary":"List Users","operationId":"users-list_users","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UsersPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/users/find/{email}":{"get":{"tags":["users"],"summary":"Find User By Email","operationId":"users-find_user_by_email","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"email","in":"path","required":true,"schema":{"type":"string","title":"Email"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/users/signup":{"post":{"tags":["users"],"summary":"Register User","description":"Register a new user account.\n\nParameters\n----------\ndb : Session\n    Database session.\nuser_in : UserRegister\n    Registration data for the new user.\n\nReturns\n-------\nUserPublic\n    The created user's public info.\n\nRaises\n------\nHTTPException\n    If a user with the given email already exists.","operationId":"users-register_user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRegister"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserPublic"}}}},"404":{"description":"Not found"},"500":{"description":"Internal server error"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/notes/":{"get":{"tags":["notes"],"summary":"Read Notes","description":"Get all notes for the current user.\n\nParameters\n----------\ndb : Session\n    Database session.\ncurrent_user : User\n    The authenticated user.\n\nReturns\n-------\nList[Note]\n    List of notes for the user.","operationId":"notes-read_notes","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Note"},"type":"array","title":"Response Notes-Read Notes"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["notes"],"summary":"Create Note","description":"Create a new note for the current user.\n\nParameters\n----------\nnote : Note\n    The note data from the request body.\ndb : Session\n    Database session.\ncurrent_user : User\n    The authenticated user.\n\nReturns\n-------\nNote\n    The created note.","operationId":"notes-create_note","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/notes/{note_id}":{"get":{"tags":["notes"],"summary":"Read Note","description":"Get a single note by id for the current user.\n\nParameters\n----------\nnote_id : int\n    The note's primary key.\ndb : Session\n    Database session.\ncurrent_user : User\n    The authenticated user.\n\nReturns\n-------\nNote\n    The note if found.\n\nRaises\n------\nHTTPException\n    If the note is not found.","operationId":"notes-read_note","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"note_id","in":"path","required":true,"schema":{"type":"integer","title":"Note Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["notes"],"summary":"Delete Note","description":"Delete a note by id for the current user.\n\nParameters\n----------\nnote_id : int\n    The note's primary key.\ndb : Session\n    Database session.\ncurrent_user : User\n    The authenticated user.\n\nRaises\n------\nHTTPException\n    If the note is not found.","operationId":"notes-delete_note","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"note_id","in":"path","required":true,"schema":{"type":"integer","title":"Note Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Body_login-login_access_token":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","format":"password","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"format":"password","title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login-login_access_token"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Message":{"properties":{"message":{"type":"string","title":"Message"}},"type":"object","required":["message"],"title":"Message","description":"Standard message response.\n\nAttributes\n----------\nmessage : str\n    The message string."},"Note":{"properties":{"id":{"type":"integer","title":"Id"},"title":{"type":"string","title":"Title"},"content":{"type":"string","title":"Content"},"user_id":{"type":"string","format":"uuid","title":"User Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["title","content","user_id"],"title":"Note","description":"A note belonging to a user.\n\nAttributes\n----------\nid : int\n    Primary key.\ntitle : str\n    Title of the note.\ncontent : str\n    Content of the note.\nuser_id : uuid.UUID\n    Foreign key to the user who owns the note.\ncreated_at : datetime\n    Creation timestamp.\nupdated_at : datetime\n    Last update timestamp."},"Token":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type","default":"bearer"}},"type":"object","required":["access_token"],"title":"Token","description":"Access token response model.\n\nAttributes\n----------\naccess_token : str\n    The JWT access token.\ntoken_type : str\n    The type of token (default: \"bearer\")."},"UpdatePassword":{"properties":{"current_password":{"type":"string","maxLength":40,"minLength":8,"title":"Current Password"},"new_password":{"type":"string","maxLength":40,"minLength":8,"title":"New Password"}},"type":"object","required":["current_password","new_password"],"title":"UpdatePassword","description":"Model for updating a user's password.\n\nAttributes\n----------\ncurrent_password : str\n    The user's current password.\nnew_password : str\n    The new password to set."},"UserPublic":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"full_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Full Name"},"is_active":{"type":"boolean","title":"Is Active","default":true},"is_superuser":{"type":"boolean","title":"Is Superuser","default":false},"id":{"type":"string","format":"uuid","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["email","id","created_at","updated_at"],"title":"UserPublic","description":"Public user model for API responses.\n\nAttributes\n----------\nid : uuid.UUID\n    User's unique ID.\nemail : EmailStr\n    User's email address.\nfull_name : str | None\n    Full name of the user.\nis_active : bool\n    Whether the user is active.\nis_superuser : bool\n    Whether the user is a superuser.\ncreated_at : datetime\n    Creation timestamp.\nupdated_at : datetime\n    Last update timestamp."},"UserRegister":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","maxLength":40,"minLength":8,"title":"Password"},"full_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Full Name"}},"type":"object","required":["email","password"],"title":"UserRegister","description":"User registration model.\n\nAttributes\n----------\nemail : EmailStr\n    User's email address.\npassword : str\n    The user's password.\nfull_name : str | None\n    Full name of the user."},"UserUpdate":{"properties":{"email":{"anyOf":[{"type":"string","maxLength":255,"format":"email"},{"type":"null"}],"title":"Email"},"full_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Full Name"},"avatar_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Avatar Url"},"phone":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Phone"},"password":{"anyOf":[{"type":"string","maxLength":40,"minLength":8},{"type":"null"}],"title":"Password"},"is_active":{"type":"boolean","title":"Is Active","default":true},"is_superuser":{"type":"boolean","title":"Is Superuser","default":false}},"type":"object","title":"UserUpdate","description":"User update model for PATCH/PUT requests.\n\nAttributes\n----------\nemail : EmailStr | None\n    New email address.\nfull_name : str | None\n    New full name.\navatar_url : str | None\n    New avatar URL.\nphone : str | None\n    New phone number.\npassword : str | None\n    New password.\nis_active : bool\n    Whether the user is active.\nis_superuser : bool\n    Whether the user is a superuser."},"UsersPublic":{"properties":{"data":{"items":{"$ref":"#/components/schemas/UserPublic"},"type":"array","title":"Data"},"count":{"type":"integer","title":"Count"}},"type":"object","required":["data","count"],"title":"UsersPublic","description":"Paginated list of public users.\n\nAttributes\n----------\ndata : List[UserPublic]\n    List of user objects.\ncount : int\n    Total number of users."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/api/v1/login/access-token"}}}}}}